@inproceedings{iftekhar:ProtectDataWithZeroTrust,
  author    = {Ahmed, Iftekhar and Nahar, Tahmin and Urmi, Shahina Sultana and Taher, Kazi Abu},
  title     = {Protection of Sensitive Data in Zero Trust Model},
  year      = {2020},
  isbn      = {9781450377782},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/3377049.3377114},
  doi       = {10.1145/3377049.3377114},
  booktitle = {Proceedings of the International Conference on Computing Advancements},
  articleno = {63},
  numpages  = {5},
  keywords  = {Access control, Sensitive data, Zero trust security, Access proxy},
  location  = {Dhaka, Bangladesh},
  series    = {ICCA 2020}
}

@book{beyer:SRE,
  title     = {Site reliability engineering: How Google runs production systems},
  author    = {Beyer, Betsy and Jones, Chris and Petoff, Jennifer and Murphy, Niall Richard},
  year      = {2016},
  publisher = {" O'Reilly Media, Inc."}
}

@inproceedings{burns:DesignPatterns,
  author    = {Brendan Burns and David Oppenheimer},
  title     = {Design Patterns for Container-based Distributed Systems},
  booktitle = {8th USENIX Workshop on Hot Topics in Cloud Computing (HotCloud 16)},
  year      = {2016},
  address   = {Denver, CO},
  url       = {https://www.usenix.org/conference/hotcloud16/workshop-program/presentation/burns},
  publisher = {USENIX Association},
  month     = jun
}

@techreport{buehler:CommonIdentity,
  author      = {Bühler, Christoph},
  institution = {University of Applied Science of Eastern Switzerland (OST)},
  month       = {feb},
  title       = {{Common Identities in a Distributed Authentication Mesh - Definition and Implementation of a Common Identity for Secure Transport}},
  url         = {https://buehler.github.io/mse-project-thesis-2/report.pdf},
  year        = {2022}
}

@techreport{buehler:DistAuthMesh,
  author      = {Bühler, Christoph},
  institution = {University of Applied Science of Eastern Switzerland (OST)},
  month       = {aug},
  title       = {{Distributed Authentication Mesh - A Concept for Declarative Ad Hoc Conversion of Credentials}},
  url         = {https://buehler.github.io/mse-project-thesis-1/report.pdf},
  year        = {2021}
}

@book{burns:KubernetesBook,
  title     = {Kubernetes},
  author    = {Burns, Brendan and Beda, Joe and Hightower, Kelsey},
  year      = {2018},
  publisher = {Dpunkt Heidelberg, Germany},
  edition   = {Second Edition}
}

@techreport{RFC5246,
  author      = {Dierks, Tim and Rescorla, Eric},
  title       = {The Transport Layer Security ({TLS}) Protocol Version 1.2},
  institution = {Internet Engineering Task Force {IETF}},
  year        = {2008},
  month       = {aug},
  type        = {RFC},
  url         = {https://tools.ietf.org/html/rfc5246}
}

@book{dobies:Operators,
  title     = {Kubernetes Operators: Automating the Container Orchestration Platform},
  author    = {Dobies, Jason and Wood, Joshua},
  year      = {2020},
  publisher = {O'Reilly Media},
  isbn      = {978-1-492-04804-6}
}

@techreport{RFC6749,
  title       = {The {OAuth} 2.0 authorization framework},
  author      = {Hardt, Dick and others},
  year        = {2012},
  month       = {oct},
  doi         = {10.17487/RFC6749},
  institution = {Internet Engineering Task Force {IETF}},
  type        = {RFC},
  issn        = {2070-1721},
  url         = {https://tools.ietf.org/html/rfc6749}
}

@article{ivanov:IsRustFast,
  doi       = {10.48550/ARXIV.2209.09127},
  url       = {https://arxiv.org/abs/2209.09127},
  author    = {Ivanov, Nikolay},
  keywords  = {Programming Languages (cs.PL), Performance (cs.PF), FOS: Computer and information sciences, FOS: Computer and information sciences},
  title     = {Is Rust C++-fast? Benchmarking System Languages on Everyday Routines},
  publisher = {arXiv},
  year      = {2022},
  copyright = {arXiv.org perpetual, non-exclusive license}
}

@inproceedings{jakobsson:MerkleTree,
  author    = {Jakobsson, Markus
               and Leighton, Tom
               and Micali, Silvio
               and Szydlo, Michael},
  editor    = {Joye, Marc},
  title     = {Fractal Merkle Tree Representation and Traversal},
  booktitle = {Topics in Cryptology --- CT-RSA 2003},
  year      = {2003},
  publisher = {Springer Berlin Heidelberg},
  address   = {Berlin, Heidelberg},
  pages     = {314--326},
  abstract  = {We introduce a technique for traversal of Merkle trees, and propose an efficient algorithm that generates a sequence of leaves along with their associated authentication paths. For one choice of parameters, and a total of N leaves, our technique requires a worst-case computational effort of 2 logN/loglog N hash function evaluations per output, and a total storage capacity of less than 1.5 log2 N/loglogN hash values. This is a simultaneous improvement both in space and time complexity over any previously published algorithm.},
  isbn      = {978-3-540-36563-1}
}


@article{jung:Rust,
  title     = {Safe systems programming in Rust},
  author    = {Jung, Ralf and Jourdan, Jacques-Henri and Krebbers, Robbert and Dreyer, Derek},
  journal   = {Communications of the ACM},
  volume    = {64},
  number    = {4},
  pages     = {144--152},
  year      = {2021},
  publisher = {ACM New York, NY, USA}
}

@article{jung:RustBelt,
  author     = {Jung, Ralf and Jourdan, Jacques-Henri and Krebbers, Robbert and Dreyer, Derek},
  title      = {RustBelt: Securing the Foundations of the Rust Programming Language},
  year       = {2017},
  issue_date = {January 2018},
  publisher  = {Association for Computing Machinery},
  address    = {New York, NY, USA},
  volume     = {2},
  number     = {POPL},
  url        = {https://doi.org/10.1145/3158154},
  doi        = {10.1145/3158154},
  abstract   = {Rust is a new systems programming language that promises to overcome the seemingly fundamental tradeoff between high-level safety guarantees and low-level control over resource management. Unfortunately, none of Rust's safety claims have been formally proven, and there is good reason to question whether they actually hold. Specifically, Rust employs a strong, ownership-based type system, but then extends the expressive power of this core type system through libraries that internally use unsafe features. In this paper, we give the first formal (and machine-checked) safety proof for a language representing a realistic subset of Rust. Our proof is extensible in the sense that, for each new Rust library that uses unsafe features, we can say what verification condition it must satisfy in order for it to be deemed a safe extension to the language. We have carried out this verification for some of the most important libraries that are used throughout the Rust ecosystem.},
  journal    = {Proc. {ACM} Program. Lang.},
  month      = {dec},
  articleno  = {66},
  numpages   = {34},
  keywords   = {type systems, Rust, concurrency, separation logic, logical relations}
}

@book{Klabnik:Rust,
  title     = {The Rust Programming Language (Covers Rust 2018)},
  author    = {Klabnik, Steve and Nichols, Carol},
  year      = {2019},
  publisher = {No Starch Press},
  isbn      = {1-7185-0044-0}
}

@article{koa:ETHERST,
  author         = {Koa, Chong-Gee and Heng, Swee-Huay and Chin, Ji-Jian},
  title          = {ETHERST: Ethereum-Based Public Key Infrastructure Identity Management with a Reward-and-Punishment Mechanism},
  journal        = {Symmetry},
  volume         = {13},
  year           = {2021},
  number         = {9},
  article-number = {1640},
  url            = {https://www.mdpi.com/2073-8994/13/9/1640},
  issn           = {2073-8994},
  abstract       = {Public Key Infrastructure (PKI) is the fundamental of secure digital communications. It provides a secure means to authenticate identities over the Internet. Symmetric or asymmetric encryption schemes are widely used in identity authentication in any kind of PKI. The conventional PKI has several drawbacks due to the centralized and non-transparent design. Several recent research works utilize blockchain technology to overcome the limitations of conventional implementations of PKI. Blockchain-based PKI integrates blockchain technology with PKI to form a new type of decentralized PKI (DPKI). Several works utilize the currency property in blockchains to implement the reward-and-punishment mechanism. In this paper, we propose a smart contract-based PKI which utilizes the Ethereum smart contract to build a new type of blockchain-based PKI with the reward-and-punishment mechanism using ERC-20 tokens. It has several advantages over previous implementations of similar research that use Ethereum’s main currency—Ether.},
  doi            = {10.3390/sym13091640}
}

@article{lin:BlockchainSecurityIssues,
  title   = {A survey of blockchain security issues and challenges.},
  author  = {Lin, Iuon-Chang and Liao, Tzu-Chun},
  journal = {International Journal of Network Security},
  volume  = {19},
  number  = {5},
  doi     = {10.6633/IJNS},
  pages   = {653--659},
  year    = {2017},
  issn    = {1816-353X}
}

@article{mallik:MITM,
  title   = {Man-in-the-middle-attack: Understanding in simple words},
  author  = {Mallik, Avijit},
  journal = {Cyberspace: Jurnal Pendidikan Teknologi Informasi},
  volume  = {2},
  number  = {2},
  pages   = {109--134},
  year    = {2019},
  doi     = {http://dx.doi.org/10.22373/cj.v2i2.3453},
  issn    = {2597-9671}
}

@misc{mdn:WebComponents,
  note      = {[Online; accessed 2022-08-15]},
  year      = {2022},
  month     = {aug},
  publisher = {Mozilla Foundation},
  title     = {Web {Components}},
  author    = {{MDN Contributors}},
  url       = {https://developer.mozilla.org/en-US/docs/Web/Web_Components}
}

@techreport{RFC8693,
  author      = {Michael Jones and Anthony Nadalin and Brian Campbell and John Bradley and Chuck Mortimore},
  title       = {{OAuth 2.0 Token Exchange}},
  institution = {Internet Engineering Task Force {IETF}},
  year        = {2020},
  month       = {jan},
  doi         = {10.17487/RFC8693},
  type        = {RFC},
  issn        = {2070-1721},
  url         = {https://tools.ietf.org/html/rfc8693}
}

@article{nofer:blockchain,
  title     = {Blockchain},
  author    = {Nofer, Michael and Gomber, Peter and Hinz, Oliver and Schiereck, Dirk},
  journal   = {Business \& Information Systems Engineering},
  volume    = {59},
  number    = {3},
  pages     = {183--187},
  year      = {2017},
  publisher = {Springer}
}

@techreport{RFC7617,
  author      = {Reschke, Julian},
  title       = {The {'Basic'} {HTTP} Authentication Scheme},
  institution = {Internet Engineering Task Force {IETF}},
  year        = {2015},
  month       = {sep},
  doi         = {10.17487/RFC7617},
  type        = {RFC},
  issn        = {2070-1721},
  url         = {https://tools.ietf.org/html/rfc7617}
}

@techreport{RFC7662,
  author      = {Richer, Justin},
  title       = {{OAuth 2.0 Token Introspection}},
  institution = {Internet Engineering Task Force {IETF}},
  doi         = {10.17487/RFC7662},
  year        = {2015},
  month       = {oct},
  type        = {RFC},
  issn        = {2070-1721},
  url         = {https://tools.ietf.org/html/rfc7662}
}

@techreport{rose:zero-trust,
  title       = {Zero trust architecture},
  author      = {Rose, Scott and Borchert, Oliver and Mitchell, Stu and Connelly, Sean},
  year        = {2019},
  institution = {National Institute of Standards and Technology}
}

@techreport{spec:OIDC,
  title       = {Openid connect core 1.0},
  author      = {Sakimura, Natsuhiko and Bradley, John and Jones, Mike and De Medeiros, Breno and Mortimore, Chuck},
  institution = {The {OpenID} Foundation {OIDF}},
  type        = {Spec},
  year        = {2014},
  url         = {https://openid.net/specs/openid-connect-core-1_0.html}
}

@article{samonas:CIA,
  title   = {The CIA strikes back: Redefining confidentiality, integrity and availability in security.},
  author  = {Samonas, Spyridon and Coss, David},
  journal = {Journal of Information System Security},
  volume  = {10},
  issue   = {3},
  year    = {2014},
  issn    = {1551-0123}
}

@inbook{siriwardena:mTLS,
  author    = {Siriwardena, Prabath},
  title     = {Mutual Authentication with TLS},
  booktitle = {Advanced API Security: Securing APIs with OAuth 2.0, OpenID Connect, JWS, and JWE},
  year      = {2014},
  publisher = {Apress},
  address   = {Berkeley, CA},
  pages     = {47--58},
  abstract  = {Transport Layer Security (TLS) mutual authentication, also known as client authentication or two-way Secure Socket Layer (SSL), is part of the TLS handshake process. In one-way TLS, only the server proves its identity to the client; this is mostly used in e-commerce to win consumer confidence by guaranteeing the legitimacy of the e-commerce vendor. In contrast, mutual authentication authenticates both parties---the client and the server.},
  isbn      = {978-1-4302-6817-8},
  doi       = {10.1007/978-1-4302-6817-8_4},
  url       = {https://doi.org/10.1007/978-1-4302-6817-8_4}
}

@article{spinellis:Git,
  author  = {Spinellis, Diomidis},
  journal = {IEEE Software},
  title   = {Git},
  year    = {2012},
  volume  = {29},
  number  = {3},
  pages   = {100-101},
  doi     = {10.1109/MS.2012.61}
}

@article{zheng:SmartContracts,
  title    = {An overview on smart contracts: Challenges, advances and platforms},
  journal  = {Future Generation Computer Systems},
  volume   = {105},
  pages    = {475-491},
  year     = {2020},
  issn     = {0167-739X},
  doi      = {https://doi.org/10.1016/j.future.2019.12.019},
  url      = {https://www.sciencedirect.com/science/article/pii/S0167739X19316280},
  author   = {Zibin Zheng and Shaoan Xie and Hong-Ning Dai and Weili Chen and Xiangping Chen and Jian Weng and Muhammad Imran},
  keywords = {Smart contract, Blockchain, Cryptocurrency, Decentralization},
  abstract = {Smart contract technology is reshaping conventional industry and business processes. Being embedded in blockchains, smart contracts enable the contractual terms of an agreement to be enforced automatically without the intervention of a trusted third party. As a result, smart contracts can cut down administration and save services costs, improve the efficiency of business processes and reduce the risks. Although smart contracts are promising to drive the new wave of innovation in business processes, there are a number of challenges to be tackled. This paper presents a survey on smart contracts. We first introduce blockchains and smart contracts. We then present the challenges in smart contracts as well as recent technical advances. We also compare typical smart contract platforms and give a categorization of smart contract applications along with some representative examples.}
}
